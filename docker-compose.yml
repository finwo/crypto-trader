version: "3.9"

services:

  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    restart: always
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - webproxy

  # web:
  #   build:
  #     context: web
  #   command: npm run start:dev
  #   depends_on:
  #     - api
  #     - nginx-proxy
  #   volumes:
  #     - ./web:/app
  #   networks:
  #     - webproxy
  #   ports:
  #     - 3000:5000
  #   environment:
  #     - PORT=5000
  #     - VIRTUAL_PORT=5000
  #     - VIRTUAL_HOST=web.docker

  api:
    build:
      context: api
    command: npm run start:dev
    depends_on:
      - nginx-proxy
      - mysql
    volumes:
      - ./api:/app
    networks:
      - webproxy
      - default
    ports:
      - 3010:5000
    environment:
      - PORT=5000
      - VIRTUAL_PORT=5000
      - VIRTUAL_HOST=api.docker
      - DB_URL=mysql://user:pass@mysql:3306/database

  mysql:
    image: mysql:5.7
    networks:
      - default
    environment:
      - MYSQL_ROOT_PASSWORD=sup3rsecret
      - MYSQL_DATABASE=database
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pass

  adminer:
    image: finwo/adminer
    restart: always
    ports:
      - 4000:8080
    networks:
      - webproxy
      - default
    environment:
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=adminer.docker
      - ADMINER_DEFAULT_SERVER=mysql

networks:
  default:
  webproxy:
